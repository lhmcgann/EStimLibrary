name: Release Pipeline

on:
  release:
    types: [published]

jobs:
  release-build-assets:
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.x' # Adjust to your target .NET version

      - name: Restore dependencies
        run: dotnet restore EStimLibrary.sln

      - name: Build solution
        run: dotnet build EStimLibrary.sln --no-restore --configuration Release

      - name: Get release version
        id: get-version
        run: |
          TAG: ${{ github.ref_name }}
          VERSION: ${TAG#v}
          echo "Version: ${VERSION}"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"

      - name: Package .dll
        env:
          VERSION: ${{ steps.get-version.outputs.version }}
        run: |
          echo "Version: ${VERSION}"
          dotnet pack src/EStimLibrary/EStimLibrary.csproj --configuration Release --no-build --output nupkg/ /p:PackageVersion="${VERSION}"

      - name: List output files
        run: ls -l nupkg/

      - name: Find package name
        id: find-pkg
        env:
          VERSION: ${{ steps.get-version.outputs.version }}
        run: |
          echo "Version: ${VERSION}"
          echo "PKG=nupkg/EStimLibrary.${VERSION}.nupkg" >> "$GITHUB_OUTPUT"

      - name: Upload Release Asset
        uses: tanyagray/action-upload-release-asset@v1.1.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.find-pkg.outputs.PKG }}
          asset_name: EStimLibrary-${{ matrix.os }}-${{ steps.get-version.outputs.version }}.nupkg
          asset_content_type: application/zip

      - name: Notify of Release
        if: github.event.release.prerelease == false
        run: echo "This is a full release on ${{ matrix.os }}."

      - name: Notify of Pre-Release
        if: github.event.release.prerelease == true
        run: echo "This is a pre-release on ${{ matrix.os }}."
